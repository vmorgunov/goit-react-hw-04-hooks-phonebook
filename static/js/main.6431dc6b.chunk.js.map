{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","ContactForm","state","name","number","handleInputChange","e","console","log","currentTarget","value","setState","handleSubmit","preventDefault","props","contacts","find","contact","toLowerCase","alert","onSubmit","this","type","pattern","title","required","onChange","Component","Titel","h2","List","ul","Item","li","ContactList","onDeleteContacts","map","id","onClick","Container","section","h1","Section","titel","children","Filter","filter","App","addContact","shortid","generate","prevState","deleteContact","handleFilter","localStorage","getItem","parsedContact","JSON","parse","prevProps","setItem","stringify","normalizedFilter","filteredContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAEaA,EAAOC,IAAOC,KAAV,yIAQJC,EAAQF,IAAOG,MAAV,0BAELC,EAAQJ,IAAOK,MAAV,iEAKLC,EAASN,IAAOO,OAAV,qL,OCbEC,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,kBAAoB,SAAAC,GAClBC,QAAQC,IAAIF,EAAEG,cAAcC,OAE5B,MAAwBJ,EAAEG,cAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBR,EAAOO,K,EAG1BE,aAAe,SAAAN,GACbA,EAAEO,iBACFN,QAAQC,IAAI,EAAKN,OACjB,MAAyB,EAAKA,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAKd,GAJkB,EAAKU,MAAMC,SAASC,MACpC,SAAAC,GAAO,OAAIA,EAAQd,KAAKe,gBAAkBf,EAAKe,iBAM/C,OAFAC,MAAM,GAAD,OAAIhB,EAAJ,iCACL,EAAKQ,SAAS,CAAER,KAAM,GAAIC,OAAQ,KAGpC,EAAKU,MAAMM,SAASjB,EAAMC,GAC1B,EAAKO,SAAS,CAAER,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,MAAyBiB,KAAKnB,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,eAACZ,EAAD,CAAM4B,SAAUC,KAAKT,aAArB,UACE,eAACjB,EAAD,kBAEE,cAACE,EAAD,CACEyB,KAAK,OACLnB,KAAK,OACLO,MAAOP,EACPoB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUL,KAAKhB,uBAGnB,eAACV,EAAD,oBAEE,cAACE,EAAD,CACEyB,KAAK,MACLnB,KAAK,SACLO,MAAON,EACPmB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUL,KAAKhB,uBAGnB,cAACN,EAAD,CAAQuB,KAAK,SAAb,iC,GA1DiCK,a,iBCF5BC,EAAQnC,IAAOoC,GAAV,oDAIL9B,EAASN,IAAOO,OAAV,wOAaN8B,EAAOrC,IAAOsC,GAAV,2CAIJC,EAAOvC,IAAOwC,GAAV,8C,QCCFC,EAnBK,SAAC,GAAoC,IAAlCnB,EAAiC,EAAjCA,SAAUoB,EAAuB,EAAvBA,iBAC/B,OACE,qCACE,cAACP,EAAD,uBACA,cAACE,EAAD,UACGf,EAASqB,KAAI,gBAAGC,EAAH,EAAGA,GAAIlC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,eAAC4B,EAAD,CAAeK,GAAIA,EAAnB,UACE,cAAC,IAAD,IACA,iCAAOlC,EAAP,OAFF,IAEuB,+BAAOC,IAC5B,cAAC,EAAD,CAAQkB,KAAK,SAASgB,QAAS,kBAAMH,EAAiBE,IAAtD,SACE,cAAC,IAAD,QAJOA,YCTRE,EAAY9C,IAAO+C,QAAV,0BAETZ,EAAQnC,IAAOgD,GAAV,mECcHC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAACL,EAAD,WACE,cAAC,EAAD,UAAQI,IACPC,MCNMjD,EAAQF,IAAOG,MAAV,gDAILC,EAAQJ,IAAOK,MAAV,iHCMH+C,EATA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQpB,EAAe,EAAfA,SACxB,OACE,eAAC,EAAD,qCAC0B,IACxB,cAAC,EAAD,CAAOJ,KAAK,OAAOZ,MAAOoC,EAAQpB,SAAUA,QCA7BqB,E,4MACnB7C,MAAQ,CACNa,SAAU,CACR,CAAEsB,GAAI,OAAQlC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEiC,GAAI,OAAQlC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEiC,GAAI,OAAQlC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEiC,GAAI,OAAQlC,KAAM,iBAAkBC,OAAQ,cAEhD0C,OAAQ,I,EAkBVE,WAAa,SAAC7C,EAAMC,GAClB,IAAMa,EAAU,CACdoB,GAAIY,IAAQC,WACZ/C,OACAC,UAGF,EAAKO,UAAS,SAAAwC,GAAS,MAAK,CAC1BpC,SAAS,CAAEE,GAAH,mBAAekC,EAAUpC,gB,EAIrCqC,cAAgB,SAAAf,GACd,EAAK1B,UAAS,SAAAwC,GAAS,MAAK,CAC1BpC,SAAUoC,EAAUpC,SAAS+B,QAAO,SAAA7B,GAAO,OAAIA,EAAQoB,KAAOA,U,EAIlEgB,aAAe,SAAA/C,GACb,EAAKK,SAAS,CAAEmC,OAAQxC,EAAEG,cAAcC,S,uDAlC1C,WACE,IAAMO,EAAUqC,aAAaC,QAAQ,YAC/BC,EAAgBC,KAAKC,MAAMzC,GAE7BuC,GACFnC,KAAKV,SAAS,CAAEI,SAAUyC,M,gCAI9B,SAAmBG,EAAWR,GACxB9B,KAAKnB,MAAMa,WAAaoC,EAAUpC,UACpCuC,aAAaM,QAAQ,WAAYH,KAAKI,UAAUxC,KAAKnB,MAAMa,a,oBA0B/D,WACE,MAA6BM,KAAKnB,MAA1B4C,EAAR,EAAQA,OAAQ/B,EAAhB,EAAgBA,SACV+C,EAAmBzC,KAAKnB,MAAM4C,OAAO5B,cACrC6C,EAAmB1C,KAAKnB,MAAMa,SAAS+B,QAAO,SAAA7B,GAAO,OACzDA,EAAQd,KAAKe,cAAc8C,SAASF,MAEtC,OACE,mCACE,eAAC,EAAD,CAASnB,MAAM,YAAf,UACE,cAAC,EAAD,CAAavB,SAAUC,KAAK2B,WAAYjC,SAAUA,IAClD,cAAC,EAAD,CAAQL,MAAOoC,EAAQpB,SAAUL,KAAKgC,eACtC,cAAC,EAAD,CACEtC,SAAUgD,EACV5B,iBAAkBd,KAAK+B,yB,GA7DFzB,aCHjCsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6431dc6b.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-left: 10px;\n  margin-bottom: 10px;\n  border: solid 1px black;\n  padding: 15px;\n  width: 300px;\n`;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input`\n  display: flex;\n  margin: 10px 0;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 15px;\n  padding: 10px;\n  border-radius: 10px;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    background-color: #bcb7b7;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = e => {\n    console.log(e.currentTarget.value);\n\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n    const { name, number } = this.state;\n    const duplicate = this.props.contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (duplicate) {\n      alert(`${name} is already in contacts`);\n      this.setState({ name: '', number: '' });\n      return;\n    }\n    this.props.onSubmit(name, number);\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleInputChange}\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleInputChange}\n          />\n        </Label>\n        <Button type=\"submit\">Add contacts</Button>\n      </Form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n","import styled from '@emotion/styled';\n\nexport const Titel = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 15px;\n  border-radius: 10px;\n  border: none;\n  cursor: pointer;\n  background-color: transparent;\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    transform: scale(1.3);\n  }\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Titel, Button, List, Item } from './ContactList.styled';\nimport { BsFillPersonFill, BsFillTrashFill } from 'react-icons/bs';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => {\n  return (\n    <>\n      <Titel>Contacts</Titel>\n      <List>\n        {contacts.map(({ id, name, number }) => (\n          <Item key={id} id={id}>\n            <BsFillPersonFill />\n            <span>{name}:</span> <span>{number}</span>\n            <Button type=\"button\" onClick={() => onDeleteContacts(id)}>\n              <BsFillTrashFill />\n            </Button>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContacts: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.section``;\n\nexport const Titel = styled.h1`\n  font-size: 30px;\n  margin: 10px 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Titel } from './Section.styled';\n\nconst Section = ({ titel, children }) => {\n  return (\n    <Container>\n      <Titel>{titel}</Titel>\n      {children}\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  titel: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  margin-left: 10px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <Label>\n      Filter contacts by name{' '}\n      <Input type=\"text\" value={filter} onChange={onChange} />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport ContactForm from 'components/ContactForm';\nimport shortid from 'shortid';\nimport ContactList from 'components/ContactList';\nimport Section from 'components/Section';\nimport Filter from 'components/Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contact = localStorage.getItem('contacts');\n    const parsedContact = JSON.parse(contact);\n\n    if (parsedContact) {\n      this.setState({ contacts: parsedContact });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  handleFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const filteredContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n    return (\n      <>\n        <Section titel=\"Phonebook\">\n          <ContactForm onSubmit={this.addContact} contacts={contacts} />\n          <Filter value={filter} onChange={this.handleFilter} />\n          <ContactList\n            contacts={filteredContacts}\n            onDeleteContacts={this.deleteContact}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}